@inject NavigationManager NavigationManager
<div class="flex justify-between items-center bg-black text-white py-2 px-4 fixed bottom-0 w-full">
    <div class="sticky bottom-0 left-0 z-50 w-full h-16">
        <div class="grid h-full max-w-lg grid-cols-3 mx-auto">
            <button @onclick="@(() => NavigateTo("/home"))" type="button" class="inline-flex flex-col items-center justify-center font-medium px-5 group">
                @if (currentUri.Contains("/home"))
                {
                    <img height="20" width="20" src="Icons/Home_blue.svg"/>
                }
                else
                {
                    <img height="20" width="20" src="Icons/Home_white.svg"/>
                }
                <span class="text-sm text-[#D8D8D8] group-hover:text-[#70B5FF]">Home</span>
            </button>

            <button @onclick="@(() => NavigateTo("/favorites"))" type="button" class="inline-flex flex-col items-center justify-center font-medium px-5 group">
                @if (currentUri.Contains("/favorites"))
                {
                    <img height="20" width="22" src="Icons/Heart_blue.svg"/>
                }
                else
                {
                    <img height="20" width="22" src="Icons/Heart_white.svg"/>
                }
                <span class="text-sm text-[#D8D8D8] group-hover:text-[#70B5FF]">Favoriten</span>
            </button>

            <button @onclick="@(() => NavigateTo("/about-us"))" type="button" class="inline-flex flex-col items-center justify-center font-medium px-5 group">
                @if (currentUri.Contains("/about-us"))
                {
                    <img height="20" width="20" src="Icons/Info_blue.svg"/>
                }
                else
                {
                    <img height="20" width="20" src="Icons/Info_white.svg"/>
                }
                <span class="text-sm text-[#D8D8D8] group-hover:text-[#70B5FF]">Ãœber uns</span>
            </button>
        </div>
    </div>
</div>

@code {
    
    private string currentUri;

     protected override void OnInitialized()
     {
         // Set the initial URI
         currentUri = NavigationManager.Uri;
    
         //Subscribe to LocationChanged event
         NavigationManager.LocationChanged += OnLocationChanged;
     }

     private void OnLocationChanged(object? sender, LocationChangedEventArgs e)
     {
         // Update the current URI with the new location
         currentUri = e.Location;
    
         // Refresh the UI
         InvokeAsync(StateHasChanged); // Safely update the state
     }
    
     public void Dispose()
     {
         // Unsubscribe to avoid memory leaks
         NavigationManager.LocationChanged -= OnLocationChanged;
     }
    
    private void NavigateTo(string page)
    {
        //currentUri = page;
        NavigationManager.NavigateTo(page);
    }

}